name: Build and Deploy Website

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        env:
          GITHUB_WEB3FORMS_ACCESS_KEY: ${{ secrets.WEB3FORMS_ACCESS_KEY }}
          GITHUB_MONGODB_URI: ${{ secrets.MONGODB_URI }}
          GITHUB_ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          GITHUB_ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          REACT_APP_API_URL: ${{ secrets.API_URL || 'http://localhost:3001' }}
          CI: false
        run: npm run build

      - name: Deploy to Plesk via FTPS
        uses: kevinpainchaud/simple-ftp-deploy-action@v1.2.1
        with:
          ftp_host: ${{ secrets.FTP_SERVER }}
          ftp_username: ${{ secrets.FTP_USERNAME }}
          ftp_password: ${{ secrets.FTP_PASSWORD }}
          local_source_dir: "build"
          dist_target_dir: "httpdocs"
          delete: "true"
          exclude: "'.*'"

      # Bir önceki yöntem çalışmazsa bu yöntemi kullanabilirsiniz (yorum işaretlerini kaldırın)
      # - name: Deploy to Plesk via SSH/SFTP
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.FTP_SERVER }}
      #     username: ${{ secrets.FTP_USERNAME }}
      #     password: ${{ secrets.FTP_PASSWORD }}
      #     source: "./build/*"
      #     target: "/httpdocs/"
      #     rm: true

      # Alternatif FTP Yöntemi 1
      # - name: Deploy to Plesk via FTP (Alternative 1)
      #   if: ${{ failure() }}  # Yalnızca önceki adım başarısız olursa çalışır
      #   uses: wk-j/ftp-action@master
      #   with:
      #     hostname: ${{ secrets.FTP_SERVER }}
      #     username: ${{ secrets.FTP_USERNAME }}
      #     password: ${{ secrets.FTP_PASSWORD }}
      #     localFolder: ./build
      #     remoteFolder: /httpdocs
      #     forceUploads: "Yes"

      # Alternatif FTP Yöntemi 2
      # - name: Deploy to Plesk via FTP (Alternative 2)
      #   if: ${{ failure() }}  # Yalnızca önceki adımlar başarısız olursa çalışır
      #   run: |
      #     apt-get update && apt-get install -y lftp
      #     lftp -c "open -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_SERVER }}; mirror -R ./build /httpdocs"
